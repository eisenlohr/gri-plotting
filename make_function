#!/usr/bin/env python3

import os
import sys
import argparse
import csv
import numpy as np
import pandas as pd

try:
    from StringIO import StringIO
except ImportError:
    from io import StringIO

parser = argparse.ArgumentParser(description = """
Extract two (or three) columns of point data for plotting.
""")

parser.add_argument('-x', help='x column label')
parser.add_argument('-y', help='y column label')
parser.add_argument('-z', help='z column label')
parser.add_argument('file', help='name of data file', nargs='?', default=None)

args = parser.parse_args()

args.x = int(args.x)-1 if args.x.isdigit() else args.x
args.y = int(args.y)-1 if args.y.isdigit() else args.y
args.z = int(args.z)-1 if args.z is not None and args.z.isdigit() else args.z

with sys.stdin if args.file is None else open(args.file, newline='') as f:
    dialect = csv.Sniffer().sniff(f.read(1024))
    f.seek(0)
    buffer = StringIO(f.read())
try:
    df = pd.read_csv(buffer,
                     dialect=dialect,
                     comment='#',
                     engine='python',
                    )
except pd.errors.ParserError:
    df = pd.read_csv(buffer,
                     comment='#',
                    )

cols = [df.columns[c] if isinstance(c,int) else c for c in [args.x,args.y] + ([] if args.z is None else [args.z])]
data = df[cols].to_numpy().astype(float)

for item in data:
	print(f'{item[0]}\t{item[1]}'+('' if args.z is None else f'\t{item[2]}'))
